DECIMAL

( Load resources into VRAM )
GFX_BALL OBJ_BASE_ADR 32 CMOVE
PAL_BALL1 OBJ_COLORS 32 CMOVE
PAL_BALL2 OBJ_COLORS 32 + 32 CMOVE
PAL_BALL3 OBJ_COLORS 64 + 32 CMOVE

( Ball sprites )
0 SPRITE FIRST_BALL
1 SPRITE SECOND_BALL
2 SPRITE THIRD_BALL

( Assign palettes )
0 FIRST_BALL SPAL!
1 SECOND_BALL SPAL!
2 THIRD_BALL SPAL!

( Structure holding ball direction )
: DIRECTION CREATE 2 CELLS ALLOT ;
: D>DX ;
: D>DY CELL+ ;

DIRECTION FIRST_BALL_DIR
DIRECTION SECOND_BALL_DIR
DIRECTION THIRD_BALL_DIR

: INIT_DIRECTION >R R@ D>DY ! R> D>DX ! ; ( dx dy pos -- )
: INIT_POSITION >R R@ SY! R> SX! ; ( x y spr -- )

: INVERT_DX D>DX DUP @ NEGATE SWAP ! ; ( dir -- )
: INVERT_DY D>DY DUP @ NEGATE SWAP ! ; ( dir -- )

: TEST_NORTH SY@ 0= IF INVERT_DY ELSE DROP THEN ; ( dir spr -- )
: TEST_SOUTH SY@ 152 = IF INVERT_DY ELSE DROP THEN ; ( dir spr -- )
: TEST_WEST SX@ 0= IF INVERT_DX ELSE DROP THEN ; ( dir spr -- )
: TEST_EAST SX@ 232 = IF INVERT_DX ELSE DROP THEN ; ( dir spr -- )

: TEST_BOUNDS 2DUP TEST_NORTH 2DUP TEST_SOUTH 2DUP TEST_WEST TEST_EAST ; ( dir spr -- )

: MOVE_X SWAP D>DX @ OVER SX@ + SWAP SX! ; ( dir spr -- )
: MOVE_Y SWAP D>DY @ OVER SY@ + SWAP SY! ; ( dir spr -- )

: MOVE 2DUP MOVE_X MOVE_Y ; ( dir spr -- )

: DEMO
	1 1 FIRST_BALL_DIR INIT_DIRECTION  15 15 FIRST_BALL INIT_POSITION
	1 -1 SECOND_BALL_DIR INIT_DIRECTION  180 98 SECOND_BALL INIT_POSITION
	-1 1 THIRD_BALL_DIR INIT_DIRECTION  230 140 THIRD_BALL INIT_POSITION
	
	1024
	." Demo started, " DUP . ." cycles to go" CR	
	1 DO 
		I 255 AND 0= IF
			." ..." I .
		THEN
		FIRST_BALL_DIR FIRST_BALL 2DUP MOVE TEST_BOUNDS
		SECOND_BALL_DIR SECOND_BALL 2DUP MOVE TEST_BOUNDS
		THIRD_BALL_DIR THIRD_BALL 2DUP MOVE TEST_BOUNDS
		VSYNC
	LOOP 
	." done." CR
; ( -- )
	
DEMO
